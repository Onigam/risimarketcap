{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nvar _jsxFileName = \"/Users/magino/Dev/crypto-prices/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withLayout from '../components/Layout';\nimport Link from 'next/link';\nimport mockData from '../data/currencies';\n\nconst risiMood = ({\n  price_change\n}) => {\n  let result = 'https://image.noelshack.com/fichiers/2018/29/6/1532128784-risitas33.png';\n\n  if (price_change > 20) {} else if (price_change > 5) {} else if (price_change > 0) {\n    result = 'https://image.noelshack.com/fichiers/2017/39/3/1506463228-risibg.png';\n  } else if (price_change > -5) {\n    result = 'https://image.noelshack.com/fichiers/2016/38/1474490235-risitas434.png';\n  } else if (price_change > -15) {\n    result = 'https://image.noelshack.com/fichiers/2017/31/5/1501863678-risitas596bestreup.png';\n  } else if (price_change > -30) {\n    result = 'https://image.noelshack.com/fichiers/2016/38/1474490235-risitas434.png';\n  }\n\n  return result;\n};\n\nconst renderCurrencyRow = currency => {\n  return __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, currency.rank), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"d-flex align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: \"mr-3\",\n    width: 16,\n    height: 16,\n    src: `https://images.openmarketcap.com/coin_logos/16x16/${currency.global_id}.png`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(Link, {\n    href: \"/currencies/[name]\",\n    as: `/currencies/${currency.symbol}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, currency.name))), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, _parseFloat(currency.price_usd).toFixed(3)), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, _parseInt(currency.market_cap)), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, _parseInt(currency.volume_usd)), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, currency.available_supply), __jsx(\"td\", {\n    className: currency.price_change >= 0 ? 'text-success' : 'text-danger',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, _parseFloat(currency.price_change).toFixed(2), \"\\xA0%\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    width: 56,\n    src: risiMood(currency),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n};\n\nconst Page = () => {\n  const currencies = mockData.data;\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col p-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Cryptocurrencies by Market Capitalization\"))), __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"#\"), __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Name\"), __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Price USD\"), __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Market Cap\"), __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Volume (24h)\"), __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Available supply\"), __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Price change\"), __jsx(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Risi mood\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, currencies.map(renderCurrencyRow))))));\n};\n\nexport default withLayout(Page);","map":{"version":3,"sources":["/Users/magino/Dev/crypto-prices/pages/index.js"],"names":["withLayout","Link","mockData","risiMood","price_change","result","renderCurrencyRow","currency","rank","global_id","symbol","name","price_usd","toFixed","market_cap","volume_usd","available_supply","Page","currencies","data","map"],"mappings":"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","sourcesContent":["import withLayout from '../components/Layout';\nimport Link from 'next/link';\nimport mockData from '../data/currencies';\n\nconst risiMood = ({ price_change }) => {\n\n    let result = 'https://image.noelshack.com/fichiers/2018/29/6/1532128784-risitas33.png';\n\n    if (price_change > 20) {\n\n    } else if (price_change > 5) {\n\n    } else if (price_change > 0) {\n        result = 'https://image.noelshack.com/fichiers/2017/39/3/1506463228-risibg.png';\n    } else if (price_change > -5) {\n        result = 'https://image.noelshack.com/fichiers/2016/38/1474490235-risitas434.png';\n    } else if (price_change > -15) {\n        result = 'https://image.noelshack.com/fichiers/2017/31/5/1501863678-risitas596bestreup.png';\n    } else if (price_change > -30) {\n        result = 'https://image.noelshack.com/fichiers/2016/38/1474490235-risitas434.png';\n    }\n    return result;\n};\n\nconst renderCurrencyRow = (currency) => {\n    return (<tr>\n        <th scope=\"row\">{currency.rank}</th>\n        <td>\n            <div className=\"d-flex align-items-center\">\n                <img className=\"mr-3\" width={16} height={16} src={`https://images.openmarketcap.com/coin_logos/16x16/${currency.global_id}.png`} />\n                <Link href=\"/currencies/[name]\" as={`/currencies/${currency.symbol}`}>\n                    {currency.name}\n                </Link>\n            </div>\n        </td>\n        <td>{parseFloat(currency.price_usd).toFixed(3)}</td>\n        <td>{parseInt(currency.market_cap)}</td>\n        <td>{parseInt(currency.volume_usd)}</td>\n        <td>{currency.available_supply}</td>\n        <td className={currency.price_change >= 0 ? 'text-success' : 'text-danger'}>\n            {parseFloat(currency.price_change).toFixed(2)}&nbsp;%\n        </td>\n        <td>\n            <img width={56} src={risiMood(currency)} />\n        </td>\n    </tr>);\n};\n\nconst Page = () => {\n    const currencies = mockData.data;\n\n    return (<>\n        <div className=\"row\">\n            <div className=\"col p-4\">\n                <h3>Cryptocurrencies by Market Capitalization</h3>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col\">\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Price USD</th>\n                        <th scope=\"col\">Market Cap</th>\n                        <th scope=\"col\">Volume (24h)</th>\n                        <th scope=\"col\">Available supply</th>\n                        <th scope=\"col\">Price change</th>\n                        <th scope=\"col\">Risi mood</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {currencies.map(renderCurrencyRow)}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        </>\n    );\n}\n\nexport default withLayout(Page);\n"]},"metadata":{},"sourceType":"module"}